{"remainingRequest":"C:\\teste-login\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\teste-login\\src\\views\\Multitrack.vue?vue&type=template&id=f806ff28","dependencies":[{"path":"C:\\teste-login\\src\\views\\Multitrack.vue","mtime":1722781341040},{"path":"C:\\teste-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713973011099},{"path":"C:\\teste-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713973011099},{"path":"C:\\teste-login\\node_modules\\babel-loader\\lib\\index.js","mtime":1713973011327},{"path":"C:\\teste-login\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1713973006334},{"path":"C:\\teste-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713973011099},{"path":"C:\\teste-login\\node_modules\\vue-loader\\lib\\index.js","mtime":1713973005773}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}