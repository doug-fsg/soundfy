{"remainingRequest":"C:\\teste-login\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\teste-login\\src\\views\\Login.vue?vue&type=style&index=0&id=26084dc2&lang=css","dependencies":[{"path":"C:\\teste-login\\src\\views\\Login.vue","mtime":1722785201950},{"path":"C:\\teste-login\\node_modules\\css-loader\\dist\\cjs.js","mtime":1713973006512},{"path":"C:\\teste-login\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1713973006268},{"path":"C:\\teste-login\\node_modules\\postcss-loader\\src\\index.js","mtime":1713973005657},{"path":"C:\\teste-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713973011099},{"path":"C:\\teste-login\\node_modules\\vue-loader\\lib\\index.js","mtime":1713973005773}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmJvZHksIGh0bWwgewogIGhlaWdodDogMTAwJTsKICBtYXJnaW46IDA7CiAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmOwp9CgoubG9naW4tY29udGFpbmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjdmOWZjOwogIHBhZGRpbmc6IDFyZW07Cn0KCi5sb2dpbi1mb3JtIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIHBhZGRpbmc6IDJyZW07CiAgYm9yZGVyLXJhZGl1czogMTJweDsKICBib3gtc2hhZG93OiAwIDRweCA2cHggcmdiYSgwLCAwLCAwLCAwLjEpOwogIHdpZHRoOiAxMDAlOwogIG1heC13aWR0aDogNDUwcHg7Cn0KCmgyIHsKICBmb250LXdlaWdodDogYm9sZDsKICBjb2xvcjogIzMzMzsKfQoKYi1mb3JtLWlucHV0LCBiLWJ1dHRvbiB7CiAgbWFyZ2luLWJvdHRvbTogMXJlbTsKfQoKYSB7CiAgY29sb3I6ICMwMDdiZmY7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwp9CgphOmhvdmVyIHsKICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKfQoKLmxvZ28gewogIHdpZHRoOiAyMjBweDsKICBoZWlnaHQ6IGF1dG87Cn0KCi5yb3VuZGVkLWlucHV0IHsKICBib3JkZXItcmFkaXVzOiAxMnB4Owp9Cgoucm91bmRlZC1idXR0b24gewogIGJvcmRlci1yYWRpdXM6IDEycHg7Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AAuIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"login-container vh-100 d-flex justify-content-center align-items-center\">\n    <div class=\"login-form p-5 rounded shadow\">\n      <div class=\"text-center mb-4\">\n        <img src=\"../assets/images/logo.png\" alt=\"Logo\" class=\"logo\">\n      </div>\n      <h2 class=\"text-center mb-4\">Login</h2>\n      <b-form>\n        <b-form-group label=\"E-mail\" label-for=\"email\">\n          <b-form-input\n            id=\"email\"\n            type=\"email\"\n            placeholder=\"seuemail@dominio.com\"\n            autocomplete=\"off\"\n            v-model.trim=\"$v.form.email.$model\"\n            :state=\"getValidation('email')\"\n            class=\"rounded-input\"\n          ></b-form-input>\n        </b-form-group>\n\n        <b-form-group label-for=\"password\">\n          <label class=\"d-flex justify-content-between\">\n            Senha\n            <small><a href=\"#\">Esqueceu sua senha?</a></small>\n          </label>\n          <b-form-input\n            id=\"password\"\n            type=\"password\"\n            placeholder=\"Digite sua senha\"\n            v-model.trim=\"$v.form.password.$model\"\n            :state=\"getValidation('password')\"\n            class=\"rounded-input\"\n          ></b-form-input>\n        </b-form-group>\n\n        <b-button \n          type=\"button\" \n          variant=\"primary\"  \n          block\n          @click=\"login\"\n          class=\"rounded-button\"\n          ><i class=\"fas fa-sign-in-alt\"></i> Entrar</b-button>\n\n        <hr>\n\n        <b-button \n          type=\"button\" \n          variant=\"outline-secondary\"  \n          block\n          @click=\"goToRegister\"\n          class=\"rounded-button\"\n          ><i class=\"fas fa-user-plus\"></i> Não tenho conta</b-button>\n      </b-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { required, minLength, email } from \"vuelidate/lib/validators\";\nimport UsersModel from \"@/models/UsersModel\";\nimport ToastMixin from \"@/mixins/toastMixin.js\";\n\nexport default {\n  mixins: [ToastMixin],\n\n  data() {\n    return {\n      form: {\n        email: \"\",\n        password: \"\"\n      }\n    }\n  },\n\n  validations: {\n    form: {\n      email: {\n        required, \n        email\n      },\n\n      password: {\n        required,\n        minLength: minLength(6),\n      },\n    },\n  },\n\n  methods: {\n    async login() {\n      this.$v.$touch();\n      if (this.$v.$error) return;\n\n      let user = await UsersModel.params({email: this.form.email}).get();\n\n      if(!user || !user[0] || !user[0].email) {\n        this.showToast(\"danger\", \"Erro!\", \"Usuário e/ou senha incorretos\");\n        this.clearForm();\n        return;\n      }\n\n      user = user[0];\n      if(user.password !== this.form.password) {\n        this.showToast(\"danger\", \"Erro!\", \"Usuário e/ou senha incorretos\");\n        this.clearForm();\n        return;\n      }\n\n      localStorage.setItem('authUser', JSON.stringify(user));\n      this.$router.push({name: \"list\"});\n    },\n\n    clearForm() {\n      this.form = {\n        email: \"\",\n        password: \"\"\n      }\n    },\n\n    getValidation(field) {\n      if (this.$v.form.$dirty === false) {\n        return null;\n      }\n\n      return !this.$v.form[field].$error;\n    },\n\n    goToRegister() {\n      this.$router.push({ name: \"register\" });\n    }\n  },\n}\n</script>\n\n<style>\nbody, html {\n  height: 100%;\n  margin: 0;\n  font-family: Arial, sans-serif;\n}\n\n.login-container {\n  background-color: #f7f9fc;\n  padding: 1rem;\n}\n\n.login-form {\n  background-color: #fff;\n  padding: 2rem;\n  border-radius: 12px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 450px;\n}\n\nh2 {\n  font-weight: bold;\n  color: #333;\n}\n\nb-form-input, b-button {\n  margin-bottom: 1rem;\n}\n\na {\n  color: #007bff;\n  text-decoration: none;\n}\n\na:hover {\n  text-decoration: underline;\n}\n\n.logo {\n  width: 220px;\n  height: auto;\n}\n\n.rounded-input {\n  border-radius: 12px;\n}\n\n.rounded-button {\n  border-radius: 12px;\n}\n</style>\n"]}]}