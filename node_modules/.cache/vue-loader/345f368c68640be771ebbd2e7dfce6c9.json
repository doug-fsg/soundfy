{"remainingRequest":"C:\\teste-login\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\teste-login\\src\\views\\Editar.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\teste-login\\src\\views\\Editar.vue","mtime":1716237320697},{"path":"C:\\teste-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713973011099},{"path":"C:\\teste-login\\node_modules\\babel-loader\\lib\\index.js","mtime":1713973011327},{"path":"C:\\teste-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713973011099},{"path":"C:\\teste-login\\node_modules\\vue-loader\\lib\\index.js","mtime":1713973005773}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBUb2FzdE1peGluIGZyb20gIkAvbWl4aW5zL3RvYXN0TWl4aW4uanMiOwppbXBvcnQgeyByZXF1aXJlZCwgbWluTGVuZ3RoIH0gZnJvbSAidnVlbGlkYXRlL2xpYi92YWxpZGF0b3JzIjsKaW1wb3J0IFRhc2tzTW9kZWwgZnJvbSAiQC9tb2RlbHMvVGFza3NNb2RlbCI7CmltcG9ydCBMYWJlbE1vZGVsIGZyb20gIkAvbW9kZWxzL0xhYmVsTW9kZWwiOwppbXBvcnQgU3RhdHVzIGZyb20gIkAvdmFsdWVPYmplY3RzL3N0YXR1cyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkZvcm0iLAoKICBtaXhpbnM6IFtUb2FzdE1peGluXSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZvcm06IHsKICAgICAgICBzdWJqZWN0OiAiIiwKICAgICAgICBkZXNjcmlwdGlvbjogIiIsCiAgICAgICAgc3RhdHVzOiBTdGF0dXMuT1BFTiwKICAgICAgICBkYXRlT3ZlcmR1ZTogIiIsCiAgICAgICAgdXNlcklkOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJhdXRoVXNlciIpKS5pZCwKICAgICAgfSwKICAgICAgbWV0aG9kU2F2ZTogIm5ldyIsCiAgICAgIG9wdGlvbnNTdGF0dXM6IFsKICAgICAgICAvLyB7IHZhbHVlOiBTdGF0dXMuT1BFTiwgdGV4dDogIkFiZXJ0byIgfSwKICAgICAgICAvLyB7IHZhbHVlOiBTdGF0dXMuRklOSVNIRUQsIHRleHQ6ICJGaW5hbGl6YWRvIiB9LAogICAgICAgIC8vIHsgdmFsdWU6IFN0YXR1cy5BUkNISVZFRCwgdGV4dDogIkFycXVpdmFkbyIgfSwKICAgICAgXSwKICAgIH07CiAgfSwKCiAgdmFsaWRhdGlvbnM6IHsKICAgIGZvcm06IHsKICAgICAgc3ViamVjdDogewogICAgICAgIHJlcXVpcmVkLAogICAgICAgIG1pbkxlbmd0aDogbWluTGVuZ3RoKDMpLAogICAgICB9LAogICAgfSwKICB9LAoKICBhc3luYyBjcmVhdGVkKCkgewogICAgCiAgICBpZiAodGhpcy4kcm91dGUucGFyYW1zLnRhc2tJZCkgewogICAgICB0aGlzLm1ldGhvZFNhdmUgPSAidXBkYXRlIjsKICAgICAgdGhpcy5mb3JtID0gYXdhaXQgVGFza3NNb2RlbC5maW5kKHRoaXMuJHJvdXRlLnBhcmFtcy50YXNrSWQpOwogICAgfQogICAgCiAgICBhd2FpdCB0aGlzLmxvYWRMYWJlbE9wdGlvbnMoKTsKICAgIGNvbnNvbGUubG9nKCJMQUJFTDIiLCBhd2FpdCB0aGlzLmdldExhYmVsKCkpOwogIH0sCgogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldExhYmVsKCkgewogICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgIGxldCBzZWxmID0gdGhpczsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgc2VsZi5pc0xvYWRpbmcgPSBmYWxzZTsKICAgICAgfSwgMzAwMCk7CiAgICAgIHJldHVybiBhd2FpdCBMYWJlbE1vZGVsLnBhcmFtcyh7CiAgICAgICAgdXNlcklkOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJhdXRoVXNlciIpKS5pZCwKICAgICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzTGlzdCwKICAgICAgfSkuZ2V0KCk7CiAgICB9LAoKICAgICAgICAgICAgLy8gQWRpY2lvbmEgb3MgbGFiZWxzIMOgIG9wdGlvbnNMaXN0CiAgICAgICAgICAgIGFzeW5jIGxvYWRMYWJlbE9wdGlvbnMoKSB7CiAgICBjb25zdCBsYWJlbHMgPSBhd2FpdCB0aGlzLmdldExhYmVsKCk7CiAgICB0aGlzLm9wdGlvbnNTdGF0dXMucHVzaCguLi5sYWJlbHMubWFwKGxhYmVsID0+ICh7IHZhbHVlOiBsYWJlbC5pZCwgdGV4dDogbGFiZWwubmFtZSB9KSkpOwp9LAoKCiAgICBzYXZlVGFzaygpIHsKICAgICAgdGhpcy4kdi4kdG91Y2goKTsKICAgICAgaWYgKHRoaXMuJHYuJGVycm9yKSByZXR1cm47CgogICAgICBpZiAodGhpcy5tZXRob2RTYXZlID09PSAidXBkYXRlIikgewogICAgICAgIHRoaXMuZm9ybS5zYXZlKCk7CgogICAgICAgIHRoaXMuc2hvd1RvYXN0KCJzdWNjZXNzIiwgIlN1Y2Vzc28hIiwgIlRhcmVmYSBhdHVhbGl6YWRhIGNvbSBzdWNlc28iKTsKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IG5hbWU6ICJsaXN0IiB9KTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNvbnN0IHRhc2sgPSBuZXcgVGFza3NNb2RlbCh0aGlzLmZvcm0pOwogICAgICB0YXNrLnNhdmUoKTsKCiAgICAgIHRoaXMuc2hvd1RvYXN0KCJzdWNjZXNzIiwgIlN1Y2Vzc28hIiwgIlRhcmVmYSBjcmlhZGEgY29tIHN1Y2VzbyIpOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7IG5hbWU6ICJsaXN0IiB9KTsKICAgIH0sCgogICAgZ2V0VG9kYXkoKSB7CiAgICAgIHJldHVybiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc3BsaXQoIlQiKVswXTsKICAgIH0sCiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGdldFZhbGlkYXRpb24oKSB7CiAgICAgIGlmICh0aGlzLiR2LmZvcm0uc3ViamVjdC4kZGlydHkgPT09IGZhbHNlKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KCiAgICAgIHJldHVybiAhdGhpcy4kdi5mb3JtLnN1YmplY3QuJGVycm9yOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Editar.vue"],"names":[],"mappings":";AA4DA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Editar.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  \n  <div class=\"container mt-2\">\n\n    \n\n\n\n    <b-form>\n      <b-form-group label=\"Nome da música\" label-for=\"subject\">\n        <b-form-input\n          id=\"subject\"\n          v-model.trim=\"$v.form.subject.$model\"\n          type=\"text\"\n          required\n          autocomplete=\"off\"\n          :state=\"getValidation\"\n          aria-describedby=\"subject-feedback\"\n        ></b-form-input>\n\n        <b-form-invalid-feedback id=\"subject-feedback\"\n          >Campo obrigatório.</b-form-invalid-feedback\n        >\n      </b-form-group>\n\n      <b-form-group label=\"Descrição\" label-for=\"description\">\n        <b-form-textarea\n          id=\"description\"\n          v-model=\"form.description\"\n          type=\"text\"\n          required\n          autocomplete=\"off\"\n        ></b-form-textarea>\n      </b-form-group>\n\n      <b-form-group label=\"Status\" label-for=\"status\">\n        <b-form-select\n          id=\"status\"\n          v-model=\"form.status\"\n          :options=\"optionsStatus\"\n        ></b-form-select>\n      </b-form-group>\n\n      <b-form-group label=\"Data do ensaio\" label-for=\"dateOverdue\">\n        <b-form-datepicker\n          id=\"dateOverdue\"\n          v-model=\"form.dateOverdue\"\n          label-no-date-selected=\"Selecione uma data\"\n          :min=\"getToday()\"\n        ></b-form-datepicker>\n      </b-form-group>\n\n      <b-button type=\"submit\" variant=\"outline-primary\" @click=\"saveTask\">\n        <i class=\"fas fa-save\"></i> Salvar\n      </b-button>\n    </b-form>\n  </div>\n</template>\n\n<script>\nimport ToastMixin from \"@/mixins/toastMixin.js\";\nimport { required, minLength } from \"vuelidate/lib/validators\";\nimport TasksModel from \"@/models/TasksModel\";\nimport LabelModel from \"@/models/LabelModel\";\nimport Status from \"@/valueObjects/status\";\n\nexport default {\n  name: \"Form\",\n\n  mixins: [ToastMixin],\n\n  data() {\n    return {\n      form: {\n        subject: \"\",\n        description: \"\",\n        status: Status.OPEN,\n        dateOverdue: \"\",\n        userId: JSON.parse(localStorage.getItem(\"authUser\")).id,\n      },\n      methodSave: \"new\",\n      optionsStatus: [\n        // { value: Status.OPEN, text: \"Aberto\" },\n        // { value: Status.FINISHED, text: \"Finalizado\" },\n        // { value: Status.ARCHIVED, text: \"Arquivado\" },\n      ],\n    };\n  },\n\n  validations: {\n    form: {\n      subject: {\n        required,\n        minLength: minLength(3),\n      },\n    },\n  },\n\n  async created() {\n    \n    if (this.$route.params.taskId) {\n      this.methodSave = \"update\";\n      this.form = await TasksModel.find(this.$route.params.taskId);\n    }\n    \n    await this.loadLabelOptions();\n    console.log(\"LABEL2\", await this.getLabel());\n  },\n\n  methods: {\n    async getLabel() {\n      this.isLoading = true;\n      let self = this;\n      setTimeout(function () {\n        self.isLoading = false;\n      }, 3000);\n      return await LabelModel.params({\n        userId: JSON.parse(localStorage.getItem(\"authUser\")).id,\n        status: this.statusList,\n      }).get();\n    },\n\n            // Adiciona os labels à optionsList\n            async loadLabelOptions() {\n    const labels = await this.getLabel();\n    this.optionsStatus.push(...labels.map(label => ({ value: label.id, text: label.name })));\n},\n\n\n    saveTask() {\n      this.$v.$touch();\n      if (this.$v.$error) return;\n\n      if (this.methodSave === \"update\") {\n        this.form.save();\n\n        this.showToast(\"success\", \"Sucesso!\", \"Tarefa atualizada com suceso\");\n        this.$router.push({ name: \"list\" });\n        return;\n      }\n\n      const task = new TasksModel(this.form);\n      task.save();\n\n      this.showToast(\"success\", \"Sucesso!\", \"Tarefa criada com suceso\");\n      this.$router.push({ name: \"list\" });\n    },\n\n    getToday() {\n      return new Date().toISOString().split(\"T\")[0];\n    },\n  },\n\n  computed: {\n    getValidation() {\n      if (this.$v.form.subject.$dirty === false) {\n        return null;\n      }\n\n      return !this.$v.form.subject.$error;\n    },\n  },\n};\n</script>\n"]}]}