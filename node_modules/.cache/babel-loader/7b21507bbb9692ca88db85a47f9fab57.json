{"remainingRequest":"C:\\teste-login\\node_modules\\babel-loader\\lib\\index.js!C:\\teste-login\\node_modules\\eslint-loader\\index.js??ref--12-0!C:\\teste-login\\src\\utils\\exportWavWorker.js","dependencies":[{"path":"C:\\teste-login\\src\\utils\\exportWavWorker.js","mtime":1712962521388},{"path":"C:\\teste-login\\babel.config.js","mtime":1713903577360},{"path":"C:\\teste-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713973011099},{"path":"C:\\teste-login\\node_modules\\babel-loader\\lib\\index.js","mtime":1713973011327},{"path":"C:\\teste-login\\node_modules\\eslint-loader\\index.js","mtime":1713973006832}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXktYnVmZmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXktYnVmZmVyLnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXktYnVmZmVyLmRldGFjaGVkLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXktYnVmZmVyLnRyYW5zZmVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXktYnVmZmVyLnRyYW5zZmVyLXRvLWZpeGVkLWxlbmd0aC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5mbG9hdDMyLWFycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1sYXN0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1sYXN0LWluZGV4LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tcmV2ZXJzZWQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1zb3J0ZWQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS53aXRoLmpzIjsKZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKCkgewogIHZhciByZWNMZW5ndGggPSAwOwogIHZhciByZWNCdWZmZXJzTCA9IFtdOwogIHZhciByZWNCdWZmZXJzUiA9IFtdOwogIHZhciBzYW1wbGVSYXRlOwogIGZ1bmN0aW9uIGluaXQoY29uZmlnKSB7CiAgICBzYW1wbGVSYXRlID0gY29uZmlnLnNhbXBsZVJhdGU7CiAgfQogIGZ1bmN0aW9uIHJlY29yZChpbnB1dEJ1ZmZlcikgewogICAgcmVjQnVmZmVyc0wucHVzaChpbnB1dEJ1ZmZlclswXSk7CiAgICByZWNCdWZmZXJzUi5wdXNoKGlucHV0QnVmZmVyWzFdKTsKICAgIHJlY0xlbmd0aCArPSBpbnB1dEJ1ZmZlclswXS5sZW5ndGg7CiAgfQogIGZ1bmN0aW9uIHdyaXRlU3RyaW5nKHZpZXcsIG9mZnNldCwgc3RyaW5nKSB7CiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0cmluZy5sZW5ndGg7IGkgKz0gMSkgewogICAgICB2aWV3LnNldFVpbnQ4KG9mZnNldCArIGksIHN0cmluZy5jaGFyQ29kZUF0KGkpKTsKICAgIH0KICB9CiAgZnVuY3Rpb24gZmxvYXRUbzE2Qml0UENNKG91dHB1dCwgb2Zmc2V0LCBpbnB1dCkgewogICAgdmFyIHdyaXRlT2Zmc2V0ID0gb2Zmc2V0OwogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkgKz0gMSwgd3JpdGVPZmZzZXQgKz0gMikgewogICAgICB2YXIgcyA9IE1hdGgubWF4KC0xLCBNYXRoLm1pbigxLCBpbnB1dFtpXSkpOwogICAgICBvdXRwdXQuc2V0SW50MTYod3JpdGVPZmZzZXQsIHMgPCAwID8gcyAqIDB4ODAwMCA6IHMgKiAweDdmZmYsIHRydWUpOwogICAgfQogIH0KICBmdW5jdGlvbiBlbmNvZGVXQVYoc2FtcGxlcykgewogICAgdmFyIG1vbm8gPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlOwogICAgdmFyIGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcig0NCArIHNhbXBsZXMubGVuZ3RoICogMik7CiAgICB2YXIgdmlldyA9IG5ldyBEYXRhVmlldyhidWZmZXIpOwoKICAgIC8qIFJJRkYgaWRlbnRpZmllciAqLwogICAgd3JpdGVTdHJpbmcodmlldywgMCwgIlJJRkYiKTsKICAgIC8qIGZpbGUgbGVuZ3RoICovCiAgICB2aWV3LnNldFVpbnQzMig0LCAzMiArIHNhbXBsZXMubGVuZ3RoICogMiwgdHJ1ZSk7CiAgICAvKiBSSUZGIHR5cGUgKi8KICAgIHdyaXRlU3RyaW5nKHZpZXcsIDgsICJXQVZFIik7CiAgICAvKiBmb3JtYXQgY2h1bmsgaWRlbnRpZmllciAqLwogICAgd3JpdGVTdHJpbmcodmlldywgMTIsICJmbXQgIik7CiAgICAvKiBmb3JtYXQgY2h1bmsgbGVuZ3RoICovCiAgICB2aWV3LnNldFVpbnQzMigxNiwgMTYsIHRydWUpOwogICAgLyogc2FtcGxlIGZvcm1hdCAocmF3KSAqLwogICAgdmlldy5zZXRVaW50MTYoMjAsIDEsIHRydWUpOwogICAgLyogY2hhbm5lbCBjb3VudCAqLwogICAgdmlldy5zZXRVaW50MTYoMjIsIG1vbm8gPyAxIDogMiwgdHJ1ZSk7CiAgICAvKiBzYW1wbGUgcmF0ZSAqLwogICAgdmlldy5zZXRVaW50MzIoMjQsIHNhbXBsZVJhdGUsIHRydWUpOwogICAgLyogYnl0ZSByYXRlIChzYW1wbGUgcmF0ZSAqIGJsb2NrIGFsaWduKSAqLwogICAgdmlldy5zZXRVaW50MzIoMjgsIHNhbXBsZVJhdGUgKiA0LCB0cnVlKTsKICAgIC8qIGJsb2NrIGFsaWduIChjaGFubmVsIGNvdW50ICogYnl0ZXMgcGVyIHNhbXBsZSkgKi8KICAgIHZpZXcuc2V0VWludDE2KDMyLCA0LCB0cnVlKTsKICAgIC8qIGJpdHMgcGVyIHNhbXBsZSAqLwogICAgdmlldy5zZXRVaW50MTYoMzQsIDE2LCB0cnVlKTsKICAgIC8qIGRhdGEgY2h1bmsgaWRlbnRpZmllciAqLwogICAgd3JpdGVTdHJpbmcodmlldywgMzYsICJkYXRhIik7CiAgICAvKiBkYXRhIGNodW5rIGxlbmd0aCAqLwogICAgdmlldy5zZXRVaW50MzIoNDAsIHNhbXBsZXMubGVuZ3RoICogMiwgdHJ1ZSk7CiAgICBmbG9hdFRvMTZCaXRQQ00odmlldywgNDQsIHNhbXBsZXMpOwogICAgcmV0dXJuIHZpZXc7CiAgfQogIGZ1bmN0aW9uIG1lcmdlQnVmZmVycyhyZWNCdWZmZXJzLCBsZW5ndGgpIHsKICAgIHZhciByZXN1bHQgPSBuZXcgRmxvYXQzMkFycmF5KGxlbmd0aCk7CiAgICB2YXIgb2Zmc2V0ID0gMDsKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVjQnVmZmVycy5sZW5ndGg7IGkgKz0gMSkgewogICAgICByZXN1bHQuc2V0KHJlY0J1ZmZlcnNbaV0sIG9mZnNldCk7CiAgICAgIG9mZnNldCArPSByZWNCdWZmZXJzW2ldLmxlbmd0aDsKICAgIH0KICAgIHJldHVybiByZXN1bHQ7CiAgfQogIGZ1bmN0aW9uIGludGVybGVhdmUoaW5wdXRMLCBpbnB1dFIpIHsKICAgIHZhciBsZW5ndGggPSBpbnB1dEwubGVuZ3RoICsgaW5wdXRSLmxlbmd0aDsKICAgIHZhciByZXN1bHQgPSBuZXcgRmxvYXQzMkFycmF5KGxlbmd0aCk7CiAgICB2YXIgaW5kZXggPSAwOwogICAgdmFyIGlucHV0SW5kZXggPSAwOwogICAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSB7CiAgICAgIHJlc3VsdFtpbmRleCArPSAxXSA9IGlucHV0TFtpbnB1dEluZGV4XTsKICAgICAgcmVzdWx0W2luZGV4ICs9IDFdID0gaW5wdXRSW2lucHV0SW5kZXhdOwogICAgICBpbnB1dEluZGV4ICs9IDE7CiAgICB9CiAgICByZXR1cm4gcmVzdWx0OwogIH0KICBmdW5jdGlvbiBleHBvcnRXQVYodHlwZSkgewogICAgdmFyIGJ1ZmZlckwgPSBtZXJnZUJ1ZmZlcnMocmVjQnVmZmVyc0wsIHJlY0xlbmd0aCk7CiAgICB2YXIgYnVmZmVyUiA9IG1lcmdlQnVmZmVycyhyZWNCdWZmZXJzUiwgcmVjTGVuZ3RoKTsKICAgIHZhciBpbnRlcmxlYXZlZCA9IGludGVybGVhdmUoYnVmZmVyTCwgYnVmZmVyUik7CiAgICB2YXIgZGF0YXZpZXcgPSBlbmNvZGVXQVYoaW50ZXJsZWF2ZWQpOwogICAgdmFyIGF1ZGlvQmxvYiA9IG5ldyBCbG9iKFtkYXRhdmlld10sIHsKICAgICAgdHlwZTogdHlwZQogICAgfSk7CiAgICBwb3N0TWVzc2FnZShhdWRpb0Jsb2IpOwogIH0KICBmdW5jdGlvbiBjbGVhcigpIHsKICAgIHJlY0xlbmd0aCA9IDA7CiAgICByZWNCdWZmZXJzTCA9IFtdOwogICAgcmVjQnVmZmVyc1IgPSBbXTsKICB9CiAgb25tZXNzYWdlID0gZnVuY3Rpb24gb25tZXNzYWdlKGUpIHsKICAgIGlmIChlLmRhdGEuY29tbWFuZCkgewogICAgICBzd2l0Y2ggKGUuZGF0YS5jb21tYW5kKSB7CiAgICAgICAgY2FzZSAiaW5pdCI6CiAgICAgICAgICB7CiAgICAgICAgICAgIGluaXQoZS5kYXRhLmNvbmZpZyk7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgIGNhc2UgInJlY29yZCI6CiAgICAgICAgICB7CiAgICAgICAgICAgIHJlY29yZChlLmRhdGEuYnVmZmVyKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgY2FzZSAiZXhwb3J0V0FWIjoKICAgICAgICAgIHsKICAgICAgICAgICAgZXhwb3J0V0FWKGUuZGF0YS50eXBlKTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgY2FzZSAiY2xlYXIiOgogICAgICAgICAgewogICAgICAgICAgICBjbGVhcigpOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICBkZWZhdWx0OgogICAgICAgICAgewogICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoIlVua25vd24gZXhwb3J0IHdvcmtlciBjb21tYW5kIik7CiAgICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Owp9"},{"version":3,"names":["recLength","recBuffersL","recBuffersR","sampleRate","init","config","record","inputBuffer","push","length","writeString","view","offset","string","i","setUint8","charCodeAt","floatTo16BitPCM","output","input","writeOffset","s","Math","max","min","setInt16","encodeWAV","samples","mono","arguments","undefined","buffer","ArrayBuffer","DataView","setUint32","setUint16","mergeBuffers","recBuffers","result","Float32Array","set","interleave","inputL","inputR","index","inputIndex","exportWAV","type","bufferL","bufferR","interleaved","dataview","audioBlob","Blob","postMessage","clear","onmessage","e","data","command","Error"],"sources":["C:/teste-login/src/utils/exportWavWorker.js"],"sourcesContent":["export default function () {\r\n  let recLength = 0;\r\n  let recBuffersL = [];\r\n  let recBuffersR = [];\r\n  let sampleRate;\r\n\r\n  function init(config) {\r\n    sampleRate = config.sampleRate;\r\n  }\r\n\r\n  function record(inputBuffer) {\r\n    recBuffersL.push(inputBuffer[0]);\r\n    recBuffersR.push(inputBuffer[1]);\r\n    recLength += inputBuffer[0].length;\r\n  }\r\n\r\n  function writeString(view, offset, string) {\r\n    for (let i = 0; i < string.length; i += 1) {\r\n      view.setUint8(offset + i, string.charCodeAt(i));\r\n    }\r\n  }\r\n\r\n  function floatTo16BitPCM(output, offset, input) {\r\n    let writeOffset = offset;\r\n    for (let i = 0; i < input.length; i += 1, writeOffset += 2) {\r\n      const s = Math.max(-1, Math.min(1, input[i]));\r\n      output.setInt16(writeOffset, s < 0 ? s * 0x8000 : s * 0x7fff, true);\r\n    }\r\n  }\r\n\r\n  function encodeWAV(samples, mono = false) {\r\n    const buffer = new ArrayBuffer(44 + samples.length * 2);\r\n    const view = new DataView(buffer);\r\n\r\n    /* RIFF identifier */\r\n    writeString(view, 0, \"RIFF\");\r\n    /* file length */\r\n    view.setUint32(4, 32 + samples.length * 2, true);\r\n    /* RIFF type */\r\n    writeString(view, 8, \"WAVE\");\r\n    /* format chunk identifier */\r\n    writeString(view, 12, \"fmt \");\r\n    /* format chunk length */\r\n    view.setUint32(16, 16, true);\r\n    /* sample format (raw) */\r\n    view.setUint16(20, 1, true);\r\n    /* channel count */\r\n    view.setUint16(22, mono ? 1 : 2, true);\r\n    /* sample rate */\r\n    view.setUint32(24, sampleRate, true);\r\n    /* byte rate (sample rate * block align) */\r\n    view.setUint32(28, sampleRate * 4, true);\r\n    /* block align (channel count * bytes per sample) */\r\n    view.setUint16(32, 4, true);\r\n    /* bits per sample */\r\n    view.setUint16(34, 16, true);\r\n    /* data chunk identifier */\r\n    writeString(view, 36, \"data\");\r\n    /* data chunk length */\r\n    view.setUint32(40, samples.length * 2, true);\r\n\r\n    floatTo16BitPCM(view, 44, samples);\r\n\r\n    return view;\r\n  }\r\n\r\n  function mergeBuffers(recBuffers, length) {\r\n    const result = new Float32Array(length);\r\n    let offset = 0;\r\n\r\n    for (let i = 0; i < recBuffers.length; i += 1) {\r\n      result.set(recBuffers[i], offset);\r\n      offset += recBuffers[i].length;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  function interleave(inputL, inputR) {\r\n    const length = inputL.length + inputR.length;\r\n    const result = new Float32Array(length);\r\n\r\n    let index = 0;\r\n    let inputIndex = 0;\r\n\r\n    while (index < length) {\r\n      result[index += 1] = inputL[inputIndex];\r\n      result[index += 1] = inputR[inputIndex];\r\n      inputIndex += 1;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  function exportWAV(type) {\r\n    const bufferL = mergeBuffers(recBuffersL, recLength);\r\n    const bufferR = mergeBuffers(recBuffersR, recLength);\r\n    const interleaved = interleave(bufferL, bufferR);\r\n    const dataview = encodeWAV(interleaved);\r\n    const audioBlob = new Blob([dataview], { type });\r\n\r\n    postMessage(audioBlob);\r\n  }\r\n\r\n  function clear() {\r\n    recLength = 0;\r\n    recBuffersL = [];\r\n    recBuffersR = [];\r\n  }\r\n\r\n  onmessage = function onmessage(e) {\r\n    if (e.data.command) {\r\n      switch (e.data.command) {\r\n        case \"init\": {\r\n          init(e.data.config);\r\n          break;\r\n        }\r\n        case \"record\": {\r\n          record(e.data.buffer);\r\n          break;\r\n        }\r\n        case \"exportWAV\": {\r\n          exportWAV(e.data.type);\r\n          break;\r\n        }\r\n        case \"clear\": {\r\n          clear();\r\n          break;\r\n        }\r\n        default: {\r\n          throw new Error(\"Unknown export worker command\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]}]}