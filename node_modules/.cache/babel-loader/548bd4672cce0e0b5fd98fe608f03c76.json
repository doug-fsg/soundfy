{"remainingRequest":"C:\\teste-login\\node_modules\\babel-loader\\lib\\index.js!C:\\teste-login\\node_modules\\eslint-loader\\index.js??ref--12-0!C:\\teste-login\\src\\utils\\recorderWorker.js","dependencies":[{"path":"C:\\teste-login\\src\\utils\\recorderWorker.js","mtime":1712449241444},{"path":"C:\\teste-login\\babel.config.js","mtime":1713903577360},{"path":"C:\\teste-login\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713973011099},{"path":"C:\\teste-login\\node_modules\\babel-loader\\lib\\index.js","mtime":1713973011327},{"path":"C:\\teste-login\\node_modules\\eslint-loader\\index.js","mtime":1713973006832}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnNlbGYuanMiOwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoKSB7CiAgLy8gaHR0cDovL2pzcGVyZi5jb20vdHlwZWQtYXJyYXktbWluLW1heC8yCiAgLy8gcGxhaW4gZm9yIGxvb3AgZm9yIGZpbmRpbmcgbWluL21heCBpcyB3YXkgZmFzdGVyIHRoYW4gYW55dGhpbmcgZWxzZS4KICAvKioNCiAgICogQHBhcmFtIHtUeXBlZEFycmF5fSBhcnJheSAtIFN1YmFycmF5IG9mIGF1ZGlvIHRvIGNhbGN1bGF0ZSBwZWFrcyBmcm9tLg0KICAgKi8KICBmdW5jdGlvbiBmaW5kTWluTWF4KGFycmF5KSB7CiAgICB2YXIgbWluID0gSW5maW5pdHk7CiAgICB2YXIgbWF4ID0gLUluZmluaXR5OwogICAgdmFyIGN1cnI7CiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSArPSAxKSB7CiAgICAgIGN1cnIgPSBhcnJheVtpXTsKICAgICAgaWYgKG1pbiA+IGN1cnIpIHsKICAgICAgICBtaW4gPSBjdXJyOwogICAgICB9CiAgICAgIGlmIChtYXggPCBjdXJyKSB7CiAgICAgICAgbWF4ID0gY3VycjsKICAgICAgfQogICAgfQogICAgcmV0dXJuIHsKICAgICAgbWluOiBtaW4sCiAgICAgIG1heDogbWF4CiAgICB9OwogIH0KCiAgLyoqDQogICAqIEBwYXJhbSB7TnVtYmVyfSBuIC0gcGVhayB0byBjb252ZXJ0IGZyb20gZmxvYXQgdG8gSW50OCwgSW50MTYgZXRjLg0KICAgKiBAcGFyYW0ge051bWJlcn0gYml0cyAtIGNvbnZlcnQgdG8gI2JpdHMgdHdvJ3MgY29tcGxlbWVudCBzaWduZWQgaW50ZWdlcg0KICAgKi8KICBmdW5jdGlvbiBjb252ZXJ0KG4sIGJpdHMpIHsKICAgIHZhciBtYXggPSBNYXRoLnBvdygyLCBiaXRzIC0gMSk7CiAgICB2YXIgdiA9IG4gPCAwID8gbiAqIG1heCA6IG4gKiBtYXggLSAxOwogICAgcmV0dXJuIE1hdGgubWF4KC1tYXgsIE1hdGgubWluKG1heCAtIDEsIHYpKTsKICB9CgogIC8qKg0KICAgKiBAcGFyYW0ge1R5cGVkQXJyYXl9IGNoYW5uZWwgLSBBdWRpbyB0cmFjayBmcmFtZXMgdG8gY2FsY3VsYXRlIHBlYWtzIGZyb20uDQogICAqIEBwYXJhbSB7TnVtYmVyfSBzYW1wbGVzUGVyUGl4ZWwgLSBBdWRpbyBmcmFtZXMgcGVyIHBlYWsNCiAgICovCiAgZnVuY3Rpb24gZXh0cmFjdFBlYWtzKGNoYW5uZWwsIHNhbXBsZXNQZXJQaXhlbCwgYml0cykgewogICAgdmFyIGNoYW5MZW5ndGggPSBjaGFubmVsLmxlbmd0aDsKICAgIHZhciBudW1QZWFrcyA9IE1hdGguY2VpbChjaGFuTGVuZ3RoIC8gc2FtcGxlc1BlclBpeGVsKTsKICAgIHZhciBzdGFydDsKICAgIHZhciBlbmQ7CiAgICB2YXIgc2VnbWVudDsKICAgIHZhciBtYXg7CiAgICB2YXIgbWluOwogICAgdmFyIGV4dHJlbWE7CgogICAgLy8gY3JlYXRlIGludGVybGVhdmVkIGFycmF5IG9mIG1pbixtYXgKICAgIHZhciBwZWFrcyA9IG5ldyBzZWxmWyJJbnQiLmNvbmNhdChiaXRzLCAiQXJyYXkiKV0obnVtUGVha3MgKiAyKTsKICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbnVtUGVha3M7IGkgKz0gMSkgewogICAgICBzdGFydCA9IGkgKiBzYW1wbGVzUGVyUGl4ZWw7CiAgICAgIGVuZCA9IChpICsgMSkgKiBzYW1wbGVzUGVyUGl4ZWwgPiBjaGFuTGVuZ3RoID8gY2hhbkxlbmd0aCA6IChpICsgMSkgKiBzYW1wbGVzUGVyUGl4ZWw7CiAgICAgIHNlZ21lbnQgPSBjaGFubmVsLnN1YmFycmF5KHN0YXJ0LCBlbmQpOwogICAgICBleHRyZW1hID0gZmluZE1pbk1heChzZWdtZW50KTsKICAgICAgbWluID0gY29udmVydChleHRyZW1hLm1pbiwgYml0cyk7CiAgICAgIG1heCA9IGNvbnZlcnQoZXh0cmVtYS5tYXgsIGJpdHMpOwogICAgICBwZWFrc1tpICogMl0gPSBtaW47CiAgICAgIHBlYWtzW2kgKiAyICsgMV0gPSBtYXg7CiAgICB9CiAgICByZXR1cm4gcGVha3M7CiAgfQoKICAvKioNCiAgICogQHBhcmFtIHtUeXBlZEFycmF5fSBzb3VyY2UgLSBTb3VyY2Ugb2YgYXVkaW8gc2FtcGxlcyBmb3IgcGVhayBjYWxjdWxhdGlvbnMuDQogICAqIEBwYXJhbSB7TnVtYmVyfSBzYW1wbGVzUGVyUGl4ZWwgLSBOdW1iZXIgb2YgYXVkaW8gc2FtcGxlcyBwZXIgcGVhay4NCiAgICogQHBhcmFtIHtOdW1iZXJ9IGN1ZUluIC0gaW5kZXggaW4gY2hhbm5lbCB0byBzdGFydCBwZWFrIGNhbGN1bGF0aW9ucyBmcm9tLg0KICAgKiBAcGFyYW0ge051bWJlcn0gY3VlT3V0IC0gaW5kZXggaW4gY2hhbm5lbCB0byBlbmQgcGVhayBjYWxjdWxhdGlvbnMgZnJvbSAobm9uLWluY2x1c2l2ZSkuDQogICAqLwogIGZ1bmN0aW9uIGF1ZGlvUGVha3Moc291cmNlKSB7CiAgICB2YXIgc2FtcGxlc1BlclBpeGVsID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAxMDAwMDsKICAgIHZhciBiaXRzID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiA4OwogICAgaWYgKFs4LCAxNiwgMzJdLmluZGV4T2YoYml0cykgPCAwKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcigiSW52YWxpZCBudW1iZXIgb2YgYml0cyBzcGVjaWZpZWQgZm9yIHBlYWtzLiIpOwogICAgfQogICAgdmFyIHBlYWtzID0gW107CiAgICB2YXIgc3RhcnQgPSAwOwogICAgdmFyIGVuZCA9IHNvdXJjZS5sZW5ndGg7CiAgICBwZWFrcy5wdXNoKGV4dHJhY3RQZWFrcyhzb3VyY2Uuc3ViYXJyYXkoc3RhcnQsIGVuZCksIHNhbXBsZXNQZXJQaXhlbCwgYml0cykpOwogICAgdmFyIGxlbmd0aCA9IHBlYWtzWzBdLmxlbmd0aCAvIDI7CiAgICByZXR1cm4gewogICAgICBiaXRzOiBiaXRzLAogICAgICBsZW5ndGg6IGxlbmd0aCwKICAgICAgZGF0YTogcGVha3MKICAgIH07CiAgfQogIG9ubWVzc2FnZSA9IGZ1bmN0aW9uIG9ubWVzc2FnZShlKSB7CiAgICB2YXIgcGVha3MgPSBhdWRpb1BlYWtzKGUuZGF0YS5zYW1wbGVzLCBlLmRhdGEuc2FtcGxlc1BlclBpeGVsKTsKICAgIHBvc3RNZXNzYWdlKHBlYWtzKTsKICB9Owp9"},{"version":3,"names":["findMinMax","array","min","Infinity","max","curr","i","length","convert","n","bits","Math","pow","v","extractPeaks","channel","samplesPerPixel","chanLength","numPeaks","ceil","start","end","segment","extrema","peaks","self","concat","subarray","audioPeaks","source","arguments","undefined","indexOf","Error","push","data","onmessage","e","samples","postMessage"],"sources":["C:/teste-login/src/utils/recorderWorker.js"],"sourcesContent":["export default function () {\r\n  // http://jsperf.com/typed-array-min-max/2\r\n  // plain for loop for finding min/max is way faster than anything else.\r\n  /**\r\n   * @param {TypedArray} array - Subarray of audio to calculate peaks from.\r\n   */\r\n  function findMinMax(array) {\r\n    let min = Infinity;\r\n    let max = -Infinity;\r\n    let curr;\r\n\r\n    for (let i = 0; i < array.length; i += 1) {\r\n      curr = array[i];\r\n      if (min > curr) {\r\n        min = curr;\r\n      }\r\n      if (max < curr) {\r\n        max = curr;\r\n      }\r\n    }\r\n\r\n    return {\r\n      min,\r\n      max,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @param {Number} n - peak to convert from float to Int8, Int16 etc.\r\n   * @param {Number} bits - convert to #bits two's complement signed integer\r\n   */\r\n  function convert(n, bits) {\r\n    const max = 2 ** (bits - 1);\r\n    const v = n < 0 ? n * max : n * max - 1;\r\n    return Math.max(-max, Math.min(max - 1, v));\r\n  }\r\n\r\n  /**\r\n   * @param {TypedArray} channel - Audio track frames to calculate peaks from.\r\n   * @param {Number} samplesPerPixel - Audio frames per peak\r\n   */\r\n  function extractPeaks(channel, samplesPerPixel, bits) {\r\n    const chanLength = channel.length;\r\n    const numPeaks = Math.ceil(chanLength / samplesPerPixel);\r\n    let start;\r\n    let end;\r\n    let segment;\r\n    let max;\r\n    let min;\r\n    let extrema;\r\n\r\n    // create interleaved array of min,max\r\n    const peaks = new self[`Int${bits}Array`](numPeaks * 2);\r\n\r\n    for (let i = 0; i < numPeaks; i += 1) {\r\n      start = i * samplesPerPixel;\r\n      end =\r\n        (i + 1) * samplesPerPixel > chanLength\r\n          ? chanLength\r\n          : (i + 1) * samplesPerPixel;\r\n\r\n      segment = channel.subarray(start, end);\r\n      extrema = findMinMax(segment);\r\n      min = convert(extrema.min, bits);\r\n      max = convert(extrema.max, bits);\r\n\r\n      peaks[i * 2] = min;\r\n      peaks[i * 2 + 1] = max;\r\n    }\r\n\r\n    return peaks;\r\n  }\r\n\r\n  /**\r\n   * @param {TypedArray} source - Source of audio samples for peak calculations.\r\n   * @param {Number} samplesPerPixel - Number of audio samples per peak.\r\n   * @param {Number} cueIn - index in channel to start peak calculations from.\r\n   * @param {Number} cueOut - index in channel to end peak calculations from (non-inclusive).\r\n   */\r\n  function audioPeaks(source, samplesPerPixel = 10000, bits = 8) {\r\n    if ([8, 16, 32].indexOf(bits) < 0) {\r\n      throw new Error(\"Invalid number of bits specified for peaks.\");\r\n    }\r\n\r\n    const peaks = [];\r\n    const start = 0;\r\n    const end = source.length;\r\n    peaks.push(\r\n      extractPeaks(source.subarray(start, end), samplesPerPixel, bits)\r\n    );\r\n\r\n    const length = peaks[0].length / 2;\r\n\r\n    return {\r\n      bits,\r\n      length,\r\n      data: peaks,\r\n    };\r\n  }\r\n\r\n  onmessage = function onmessage(e) {\r\n    const peaks = audioPeaks(e.data.samples, e.data.samplesPerPixel);\r\n\r\n    postMessage(peaks);\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]}]}